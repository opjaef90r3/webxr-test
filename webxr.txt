<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WebXR Game</title>
    <script src="https://unpkg.com/react/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom/umd/react-dom.production.min.js"></script>
    <script src="https://unpkg.com/@react-three/fiber"></script>
    <script src="https://unpkg.com/@react-three/xr"></script>
    <script src="https://unpkg.com/drei"></script>
    <script src="https://unpkg.com/three/build/three.min.js"></script>
</head>
<body>
    <div id="root"></div>
    <script type="text/javascript">
        const { useRef, useState } = React;
        const { Canvas, useFrame } = ReactThreeFiber;
        const { XR, XRButton, Controllers, Hands } = ReactXR;
        const { Box } = drei;
        const { Vector3 } = THREE;

        function getRandomPosition() {
            return [
                (Math.random() - 0.5) * 4,
                (Math.random() - 0.5) * 4,
                (Math.random() - 0.5) * 4
            ];
        }

        function InteractiveBox({ onInteract }) {
            const ref = useRef();
            const [position, setPosition] = useState(getRandomPosition());
            useFrame(() => (ref.current.rotation.x += 0.01));

            const handleInteraction = () => {
                const newPosition = getRandomPosition();
                setPosition(newPosition);
                if (onInteract) {
                    onInteract(newPosition);
                }
            };

            return (
                <Box
                    ref={ref}
                    position={position}
                    onClick={handleInteraction}
                    onPointerOver={handleInteraction}
                >
                    <meshStandardMaterial attach="material" color="orange" />
                </Box>
            );
        }

        function App() {
            const handleBoxInteraction = (newPosition) => {
                console.log('Box moved to:', newPosition);
            };

            return (
                <>
                    <XRButton />
                    <Canvas>
                        <XR>
                            <ambientLight />
                            <pointLight position={[10, 10, 10]} />
                            <InteractiveBox onInteract={handleBoxInteraction} />
                            <Controllers />
                            <Hands />
                        </XR>
                    </Canvas>
                </>
            );
        }

        ReactDOM.render(<App />, document.getElementById('root'));
    </script>
</body>
</html>
